{"version":3,"sources":["assets/forest.jpg","assets/mushroom.jpg","redux/predict/type/dispatchType.tsx","redux/url/Url.tsx","methods/capitalize.tsx","components/form/MForm.tsx","components/button/SwitchButton.tsx","shared/formElements.tsx","shared/mushroomFeatures.tsx","views/app/App.tsx","redux/predict/thunk/predictThunk.tsx","redux/predict/reducer/predictReducer.tsx","redux/config/combineReducers/Index.tsx","redux/config/Store.tsx","index.tsx"],"names":["LOADING","RESULT","ERROR","CLEAR","url","Object","freeze","PREDICT","capitalize","text","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","capitalizeFirst","MForm","submitDisabled","label","targetName","options","onChange","onClick","onSubmit","inputs","viewport","useSelector","state","prediction","loading","predictResult","error","Form","className","e","Group","controlId","Label","Control","as","name","value","disabled","optionValues","optionValue","index","optionShortcut","optionShortcuts","length","Button","type","variant","Spinner","animation","role","aria-hidden","size","SwitchButton","blocked","icon","formElements","option","features","App","dispatch","useDispatch","useState","currentIndex","setCurrentIndex","setInputs","setViewport","useEffect","window","innerWidth","Row","Col","xl","Image","src","require","default","xs","faArrowAltCircleLeft","preventDefault","undefined","faArrowAltCircleRight","values","persist","target","data","a","payload","fetch","method","headers","body","JSON","stringify","response","json","responseData","result","edible","poisonous","Date","getFullYear","Nav","Link","href","faLinkedin","initialState","predictReducer","action","allReducers","combineReducers","MyStore","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.8d804853.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/forest.5ddfa80b.jpg\";","export default __webpack_public_path__ + \"static/media/mushroom.5d335269.jpg\";","export const LOADING = \"predict_loading\";\r\nexport const RESULT = \"predict_result\";\r\nexport const ERROR = \"predict_error\";\r\nexport const CLEAR = \"predict_clear\";\r\n\r\nexport interface PredictLoading {\r\n  type: typeof LOADING;\r\n  payload: boolean;\r\n}\r\n\r\nexport interface PredictResult {\r\n  type: typeof RESULT;\r\n  payload: string;\r\n}\r\n\r\nexport interface PredictError {\r\n  type: typeof ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport interface PredictClear {\r\n  type: typeof CLEAR;\r\n}\r\n\r\nexport type PredictDispatchTypes =\r\n  | PredictLoading\r\n  | PredictResult\r\n  | PredictError\r\n  | PredictClear;\r\n","interface Url {\r\n  PREDICT: string;\r\n}\r\n\r\nexport const url: Readonly<Url> = Object.freeze({\r\n  PREDICT: \"https://edibleorpoisonous.herokuapp.com/mushrooms/api/predict\",\r\n});\r\n","export const capitalize = (text: string): string => {\r\n  return text\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(\" \");\r\n};\r\n\r\nexport const capitalizeFirst = (text: string): string => {\r\n  return text.charAt(0).toUpperCase() + text.slice(1);\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/config/Store\";\r\nimport { Form, Button, Spinner } from \"react-bootstrap\";\r\nimport { capitalize, capitalizeFirst } from \"../../methods/capitalize\";\r\nimport \"./form.css\";\r\n\r\ntype options = {\r\n  optionValues: string[];\r\n  optionShortcuts: string[];\r\n};\r\n\r\ntype TOnchange = (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n\r\ntype TOnclick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n\r\ntype TOnsubmit = (e: React.FormEvent) => void;\r\n\r\ntype inputs = {\r\n  [key: string]: string;\r\n};\r\n\r\ninterface MFormProps {\r\n  submitDisabled: boolean;\r\n  label: string;\r\n  targetName: string;\r\n  options: options;\r\n  onChange: TOnchange;\r\n  onClick: TOnclick;\r\n  onSubmit: TOnsubmit;\r\n  inputs: inputs;\r\n  viewport: number;\r\n}\r\n\r\nconst MForm: React.FC<MFormProps> = ({\r\n  submitDisabled,\r\n  label,\r\n  targetName,\r\n  options,\r\n  onChange,\r\n  onClick,\r\n  onSubmit,\r\n  inputs,\r\n  viewport,\r\n}) => {\r\n  const { loading, predictResult, error } = useSelector(\r\n    (state: RootState) => state.prediction\r\n  );\r\n\r\n  return (\r\n    <Form className=\"form\" onSubmit={(e: React.FormEvent) => onSubmit(e)}>\r\n      <Form.Group controlId=\"formBasicMushrooms\">\r\n        <Form.Label className=\"form__label\">{capitalize(label)}</Form.Label>\r\n        <Form.Control\r\n          className=\"form__control\"\r\n          as=\"select\"\r\n          name={targetName}\r\n          value={inputs[targetName] || \"\"}\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => onChange(e)}\r\n        >\r\n          <option className=\"form__option\" disabled={true} value=\"\">\r\n            {capitalize(\"choose one option\")}\r\n          </option>\r\n          {options.optionValues.map((optionValue, index) => {\r\n            let optionShortcut: string = options.optionShortcuts[index];\r\n            return (\r\n              <option\r\n                className=\"form__option\"\r\n                key={index}\r\n                value={optionShortcut || \"\"}\r\n              >\r\n                {capitalizeFirst(optionValue)}\r\n              </option>\r\n            );\r\n          })}\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <div className=\"btn-wrap\">\r\n        {(predictResult.length === 0 || error.length > 0) && (\r\n          <Button\r\n            className=\"form__btn\"\r\n            disabled={submitDisabled}\r\n            type=\"submit\"\r\n            variant=\"outline-dark\"\r\n          >\r\n            <div className=\"form__btn-wrap\">\r\n              {loading &&\r\n                (viewport > 900 && viewport <= 1024 ? (\r\n                  <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                ) : (\r\n                  <Spinner\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                ))}\r\n              {loading ? (\r\n                <span className=\"form__btn-content\">\r\n                  {capitalizeFirst(\"predicting ...\")}\r\n                </span>\r\n              ) : (\r\n                <span className=\"form__btn-content\">\r\n                  {capitalizeFirst(\"predict\")}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </Button>\r\n        )}\r\n        <div className=\"form__error\">\r\n          {error.length > 0 && (\r\n            <span className=\"form__error-content\">{error}</span>\r\n          )}\r\n        </div>\r\n        {predictResult.length > 0 && error.length === 0 && (\r\n          <Button\r\n            className=\"form__btn\"\r\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\r\n              onClick(e)\r\n            }\r\n            variant=\"dark\"\r\n          >\r\n            Reset\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default MForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { IconDefinition } from \"@fortawesome/free-regular-svg-icons\";\r\nimport \"./switchButton.css\";\r\n\r\ntype TClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\r\n\r\ninterface ButtonProps {\r\n  blocked: boolean;\r\n  icon: IconDefinition;\r\n  onClick: TClick;\r\n}\r\n\r\nconst SwitchButton: React.FC<ButtonProps> = ({ blocked, icon, onClick }) => {\r\n  return (\r\n    <div\r\n      className=\"icon\"\r\n      onClick={(e: React.MouseEvent<HTMLDivElement, MouseEvent>) => onClick(e)}\r\n    >\r\n      <FontAwesomeIcon\r\n        className={`icon-ico ${blocked && \"icon-ico--blocked\"}`}\r\n        icon={icon}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SwitchButton;\r\n","type option = {\r\n  optionValues: string[];\r\n  optionShortcuts: string[];\r\n};\r\n\r\ninterface Elements {\r\n  label: string;\r\n  option: option;\r\n}\r\n\r\nexport const formElements: Elements[] = [\r\n  {\r\n    label: \"cap surface\",\r\n    option: {\r\n      optionValues: [\"fibrous\", \"grooves\", \"scaly\", \"smooth\"],\r\n      optionShortcuts: [\"f\", \"g\", \"y\", \"s\"],\r\n    },\r\n  },\r\n  {\r\n    label: \"bruises\",\r\n    option: { optionValues: [\"bruises\", \"no\"], optionShortcuts: [\"t\", \"f\"] },\r\n  },\r\n  {\r\n    label: \"gill spacing\",\r\n    option: { optionValues: [\"close\", \"crowded\"], optionShortcuts: [\"c\", \"w\"] },\r\n  },\r\n  {\r\n    label: \"gill size\",\r\n    option: { optionValues: [\"broad\", \"narrow\"], optionShortcuts: [\"b\", \"n\"] },\r\n  },\r\n  {\r\n    label: \"gill color\",\r\n    option: {\r\n      optionValues: [\r\n        \"black\",\r\n        \"brown\",\r\n        \"buff\",\r\n        \"chocolate\",\r\n        \"gray\",\r\n        \"green\",\r\n        \"orange\",\r\n        \"pink\",\r\n        \"purple\",\r\n        \"red\",\r\n        \"white\",\r\n        \"yellow\",\r\n      ],\r\n      optionShortcuts: [\r\n        \"k\",\r\n        \"n\",\r\n        \"b\",\r\n        \"h\",\r\n        \"g\",\r\n        \"r\",\r\n        \"o\",\r\n        \"p\",\r\n        \"u\",\r\n        \"e\",\r\n        \"w\",\r\n        \"y\",\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    label: \"stalk surface above ring\",\r\n    option: {\r\n      optionValues: [\"fibrous\", \"scaly\", \"silky\", \"smooth\"],\r\n      optionShortcuts: [\"f\", \"y\", \"k\", \"s\"],\r\n    },\r\n  },\r\n  {\r\n    label: \"stalk surface below ring\",\r\n    option: {\r\n      optionValues: [\"fibrous\", \"scaly\", \"silky\", \"smooth\"],\r\n      optionShortcuts: [\"f\", \"y\", \"k\", \"s\"],\r\n    },\r\n  },\r\n  {\r\n    label: \"stalk color above ring\",\r\n    option: {\r\n      optionValues: [\r\n        \"brown\",\r\n        \"buff\",\r\n        \"cinamon\",\r\n        \"gray\",\r\n        \"orange\",\r\n        \"pink\",\r\n        \"red\",\r\n        \"white\",\r\n        \"yellow\",\r\n      ],\r\n      optionShortcuts: [\"n\", \"b\", \"c\", \"g\", \"o\", \"p\", \"e\", \"w\", \"y\"],\r\n    },\r\n  },\r\n  {\r\n    label: \"ring type\",\r\n    option: {\r\n      optionValues: [\"evanescent\", \"flaring\", \"large\", \"none\", \"pendant\"],\r\n      optionShortcuts: [\"e\", \"f\", \"l\", \"n\", \"p\"],\r\n    },\r\n  },\r\n  {\r\n    label: \"spore print color\",\r\n    option: {\r\n      optionValues: [\r\n        \"black\",\r\n        \"brown\",\r\n        \"buff\",\r\n        \"chocolate\",\r\n        \"green\",\r\n        \"orange\",\r\n        \"purple\",\r\n        \"white\",\r\n        \"yellow\",\r\n      ],\r\n      optionShortcuts: [\"k\", \"n\", \"b\", \"h\", \"r\", \"o\", \"u\", \"w\", \"y\"],\r\n    },\r\n  },\r\n  {\r\n    label: \"population\",\r\n    option: {\r\n      optionValues: [\r\n        \"abundant\",\r\n        \"clustered\",\r\n        \"numerous\",\r\n        \"scattered\",\r\n        \"several\",\r\n        \"solitary\",\r\n      ],\r\n      optionShortcuts: [\"a\", \"c\", \"n\", \"s\", \"v\", \"y\"],\r\n    },\r\n  },\r\n  {\r\n    label: \"habitat\",\r\n    option: {\r\n      optionValues: [\r\n        \"grasses\",\r\n        \"leaves\",\r\n        \"meadows\",\r\n        \"paths\",\r\n        \"urban\",\r\n        \"waste\",\r\n        \"woods\",\r\n      ],\r\n      optionShortcuts: [\"g\", \"l\", \"m\", \"p\", \"u\", \"w\", \"d\"],\r\n    },\r\n  },\r\n];\r\n","export const features: string[] = [\r\n  \"cupSurface\",\r\n  \"bruises\",\r\n  \"gillSpacing\",\r\n  \"gillSize\",\r\n  \"gillColor\",\r\n  \"stalkSurfaceAboveRing\",\r\n  \"stalkSurfaceBelowRing\",\r\n  \"stalkColorAboveRing\",\r\n  \"ringType\",\r\n  \"sporePrintColor\",\r\n  \"population\",\r\n  \"habitat\",\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/config/Store\";\r\nimport {\r\n  predict,\r\n  clearPredictState,\r\n} from \"../../redux/predict/thunk/predictThunk\";\r\nimport { Row, Col, Image, Nav } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faArrowAltCircleLeft,\r\n  faArrowAltCircleRight,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport MForm from \"../../components/form/MForm\";\r\nimport SwitchButton from \"../../components/button/SwitchButton\";\r\nimport { formElements } from \"../../shared/formElements\";\r\nimport { features } from \"../../shared/mushroomFeatures\";\r\nimport { capitalizeFirst } from \"../../methods/capitalize\";\r\nimport \"./app.css\";\r\n\r\ntype modifiers = {\r\n  [key: string]: string;\r\n};\r\n\r\ninterface TInputState {\r\n  [key: string]: string;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\r\n  const [inputs, setInputs] = useState<TInputState>({});\r\n  const [viewport, setViewport] = useState<number>(0);\r\n\r\n  const { predictResult } = useSelector((state: RootState) => state.prediction);\r\n\r\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n    setInputs((inputs) => ({ ...inputs, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const handlePrev = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    currentIndex > 0 && setCurrentIndex((currentIndex) => --currentIndex);\r\n  };\r\n\r\n  const handleNext = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    currentIndex < features.length - 1 &&\r\n      inputs[features[currentIndex]] !== undefined &&\r\n      setCurrentIndex((currentIndex) => ++currentIndex);\r\n  };\r\n\r\n  const handleReset = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    setCurrentIndex(0);\r\n    setInputs({});\r\n    dispatch(clearPredictState());\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(predict(inputs));\r\n  };\r\n\r\n  const modifiers: modifiers = {\r\n    edible: \"result-content--edible\",\r\n    poisonous: \"result-content--poisonous\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    setViewport(window.innerWidth);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Row className=\"mt-4\" />\r\n      <Row>\r\n        <Col xl={2} />\r\n        <Col xl={8}>\r\n          <div className=\"banner\">\r\n            <span className=\"banner__title\">Can I eat this</span>\r\n            <Image\r\n              className=\"banner__image\"\r\n              src={require(\"../../assets/mushroom.jpg\").default}\r\n            />\r\n            <span className=\"banner__title\">?</span>\r\n          </div>\r\n        </Col>\r\n        <Col xl={2} />\r\n      </Row>\r\n      <Row className=\"mt-5\" />\r\n      <Row>\r\n        <Col xs={2} />\r\n        <Col xs={2}>\r\n          <SwitchButton\r\n            blocked={currentIndex === 0}\r\n            icon={faArrowAltCircleLeft}\r\n            onClick={handlePrev}\r\n          />\r\n        </Col>\r\n        <Col xs={4}>\r\n          <span className=\"counter\">\r\n            {currentIndex + 1} / {features.length}\r\n          </span>\r\n        </Col>\r\n        <Col xs={2}>\r\n          <SwitchButton\r\n            blocked={\r\n              currentIndex === features.length - 1 ||\r\n              inputs[features[currentIndex]] === undefined\r\n            }\r\n            icon={faArrowAltCircleRight}\r\n            onClick={handleNext}\r\n          />\r\n        </Col>\r\n        <Col xs={2} />\r\n      </Row>\r\n      <Row className=\"mt-3\" />\r\n      <Row>\r\n        <Col xl={4} xs={3} />\r\n        <Col xl={4} xs={6}>\r\n          <MForm\r\n            submitDisabled={Object.values(inputs).length !== features.length}\r\n            label={formElements[currentIndex].label}\r\n            targetName={features[currentIndex]}\r\n            options={formElements[currentIndex].option}\r\n            onChange={handleOnChange}\r\n            onClick={handleReset}\r\n            onSubmit={handleSubmit}\r\n            inputs={inputs}\r\n            viewport={viewport}\r\n          />\r\n        </Col>\r\n        <Col xl={4} xs={3} />\r\n      </Row>\r\n      <Row>\r\n        <Col xl={5} xs={4} />\r\n        <Col xl={2} xs={4}>\r\n          <div className=\"result\">\r\n            {predictResult.length > 0 && (\r\n              <span className={`result-content ${modifiers[predictResult]}`}>\r\n                {capitalizeFirst(predictResult)}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </Col>\r\n        <Col xl={5} xs={4} />\r\n      </Row>\r\n      <div className=\"container__space\"></div>\r\n      <Row>\r\n        <Col xs={2} />\r\n        <Col xs={8}>\r\n          <div className=\"image\">\r\n            <Image\r\n              className=\"image-img\"\r\n              src={require(\"../../assets/forest.jpg\").default}\r\n            />\r\n            <Image\r\n              className=\"image-img\"\r\n              src={require(\"../../assets/forest.jpg\").default}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col xs={2} />\r\n      </Row>\r\n      <Row className=\"mt-3\" />\r\n      <Row>\r\n        <Col xl={7} xs={4} />\r\n        <Col xl={3} xs={7}>\r\n          <div className=\"footer\">\r\n            <span className=\"footer__content\">\r\n              &#169; {new Date().getFullYear()} Paweł Del Priore\r\n            </span>\r\n            <Nav.Link\r\n              href=\"http://www.linkedin.com/in/pawe%C5%82-del-priore-b55bbb1a8\"\r\n              target=\"_blank\"\r\n            >\r\n              <FontAwesomeIcon className=\"footer__icon\" icon={faLinkedin} />\r\n            </Nav.Link>\r\n          </div>\r\n        </Col>\r\n        <Col xl={2} xs={1} />\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { Dispatch } from \"redux\";\r\nimport {\r\n  PredictDispatchTypes,\r\n  LOADING,\r\n  RESULT,\r\n  ERROR,\r\n  CLEAR,\r\n} from \"../type/dispatchType\";\r\nimport { url } from \"../../url/Url\";\r\n\r\ninterface Data {\r\n  [key: string]: string;\r\n}\r\n\r\nexport const predict = (data: Data) => {\r\n  return async (dispatch: Dispatch<PredictDispatchTypes>) => {\r\n    dispatch({ type: LOADING, payload: true });\r\n    try {\r\n      const response = await fetch(url.PREDICT, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      const responseData = await response.json();\r\n      const { result } = responseData;\r\n\r\n      if (result) dispatch({ type: RESULT, payload: result });\r\n    } catch (err) {\r\n      {\r\n        if (err) {\r\n          dispatch({\r\n            type: ERROR,\r\n            payload: \"network error, please try again\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearPredictState = () => {\r\n  return (dispatch: Dispatch<PredictDispatchTypes>) => {\r\n    dispatch({ type: CLEAR });\r\n  };\r\n};\r\n","import {\r\n  PredictDispatchTypes,\r\n  LOADING,\r\n  RESULT,\r\n  ERROR,\r\n  CLEAR,\r\n} from \"../type/dispatchType\";\r\n\r\ninterface PredictState {\r\n  loading: boolean;\r\n  predictResult: string;\r\n  error: string;\r\n}\r\n\r\nconst initialState: PredictState = {\r\n  loading: false,\r\n  predictResult: \"\",\r\n  error: \"\",\r\n};\r\n\r\nconst predictReducer = (\r\n  state = initialState,\r\n  action: PredictDispatchTypes\r\n): PredictState => {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return { ...state, loading: action.payload };\r\n    case RESULT:\r\n      return { ...state, ...initialState, predictResult: action.payload };\r\n    case ERROR:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case CLEAR:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default predictReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport predictReducer from \"../../predict/reducer/predictReducer\";\r\n\r\nconst allReducers = combineReducers({\r\n  prediction: predictReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport allReducers from \"./combineReducers/Index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst MyStore = createStore(allReducers, applyMiddleware(thunk));\r\n\r\nexport type RootState = ReturnType<typeof allReducers>;\r\n\r\nexport default MyStore;\r\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./views/app/App\";\nimport MyStore from \"./redux/config/Store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={MyStore}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}